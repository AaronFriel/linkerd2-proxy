name: Kubernetes

on:
  pull_request: {}
  push:
    branches:
      - "ver/k3d-tests"

jobs:
  k3d-test:
    name: K3d Tests
    permissions:
      contents: read
    timeout-minutes: 20
    runs-on: ubuntu-latest

    # Don't bother with release builds, which take quite a bit longer
    env:
      DOCKER_UNOPTIMIZED: "1"
      LINKERD_VERSION: edge-21.5.2
      K3D_VERSION: v4.4.4
      KUBECTL_VERSION: v1.21.1
      PROXY_IMAGE: linkerd-ci/linkerd/proxy:${GITHUB_SHA}

    steps:
      - name: Install kubectl
        run: |
          curl -vsLo ./kubectl "https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl"
          chmod 755 ./kubectl

      - name: Install k3d
        run: |
          curl -vsLo ./k3d "https://github.com/rancher/k3d/releases/download/${K3D_VERSION}/k3d-linux-amd64"
          chmod 755 ./k3d

      - name: Install linkerd CLI
        run: |
          curl -vsLo ./linkerd "https://github.com/linkerd/linkerd2/releases/download/${LINKERD_VERSION}/linkerd2-cli-${LINKERD_VERSION}-linux-amd64"
          chmod 755 ./linkerd

      - name: Checkout
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # v2.3.4

      # Build a docker image for the working proxy, based on a recent Linkerd version for its
      # runtime image.
      - name: Docker
        env:
          RUNTIME_IMAGE: ghcr.io/linkerd/proxy:${LINKERD_VERSION}
          DOCKER_TAG: ${PROXY_IMAGE}
        run: make docker

      - name: Setup cluster
        run: |
          ./k3d cluster create
          ./k3d image import ${PROXY_IMAGE}

      - name: Instal Linkerd in cluster
        run: |
          ./linkerd check --pre
          ./linkerd install \
                --set controllerImage=ghcr.io/linkerd/controller \
                --set proxyImage=ghcr.io/linkerd/proxy \
                --set proxyInitImage=ghcr.io/linkerd/proxy-init \
              | ./kubectl apply -f -
          ./linkerd check


      - name: Run tests
        run: |
          ./kubectl get po -A
          # TODO
